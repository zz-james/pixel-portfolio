:root {
  --tile-size: 32;
  --tilemap-cols: 17;
  --tilemap-rows: 21;
  --stage-cols: 20;
  --stage-rows: 12;
  --background-width: calc(var(--tile-size) * var(--tilemap-cols));
  --background-height: calc(var(--tile-size) * var(--tilemap-rows));
  --screen-tile-width: 32; /* it probably wont be this js overwrites this as it can't be done in CSS variables without becoming a px value which you can't use as divisor */
  --screen-tile-height: 32;
}

* {
  font-family: "Lato", ".SFNSText", "SFProText-Regular", "SFUIText-Regular",
    ".SFUIText", Helvetica, Arial, sans-serif;
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

t-ile-app {
  display: block;
  position: relative;
  background-image: url(images/background.png);
  background-repeat: repeat-x;
  background-size: calc(var(--background-width) * 1px) 100%;
  /* width: 98vw; */
  height: calc(calc(var(--tile-size) * var(--stage-rows)) * 1px);
}

t-ile-layer {
  position: absolute;
  /* border: 1px solid red; */
  display: grid;
  gap: 0;
  grid-template-rows: repeat(var(--stage-rows), 1fr);
  grid-template-columns: repeat(var(--stage-cols), 1fr);
  /* width: calc(calc(var(--tile-size) * var(--stage-cols)) * 1px); */
  width: 100%;
  height: 100%;
}
t-ile {
  display: inline-block;
  grid-row: span 1;
  grid-column: span 1;
  background-image: url(images/tileset.png);

  /* scale up the background because it needs to scale with the page */
  --background-x-size: calc(calc(100% * var(--tilemap-cols)));
  --background-y-size: calc(calc(100% * var(--tilemap-rows)));
  background-size: var(--background-x-size) var(--background-y-size); /* these are % values */

  /* calcs -- background width needs to be adjusted because we want 100% to be the start of the last tile not the end nb. integer not px*/
  --background-width-adjusted-for-percent-offset: calc(
    var(--background-width) - var(--screen-tile-width)
  );

  --background-height-adjusted-for-percent-offset: calc(
    var(--background-height) - var(--screen-tile-width)
  );

  /* this is the x coordinate we start taking from the background image, in integer terms not px as it's not the rendered value */
  --x-tile-offset: calc(var(--x) * var(--tile-size));
  --y-tile-offset: calc(var(--y) * var(--tile-size));

  /* here we calculate the percentage offset in the integer values and use that in the background position prop  which will give us real px values */
  --x-background-offset: calc(
    calc(
        var(--x-tile-offset) /
          var(--background-width-adjusted-for-percent-offset)
      ) * 100%
  );

  --y-background-offset: calc(
    calc(
        var(--y-tile-offset) /
          var(--background-height-adjusted-for-percent-offset)
      ) * 100%
  );

  background-position: var(--x-background-offset) var(--y-background-offset);
}

body {
  margin: 0;
  background-color: #0f0e1f;
}

#layout {
  position: relative;
  height: 96dvh;
  max-height: 96dvh;
  display: flex;
  flex-direction: column;
  align-content: stretch;
}

#game {
  overflow: hidden;
  background-color: black;
  flex-grow: 1;
}
#navigation {
  background-color: yellowgreen;
  flex-shrink: 0;

  display: flex;
}

/* mobile portrait */
:root {
  --control-panel-button-width: 64px;
  --control-panel-button-height: 64px;
  --control-panel-width: 192px;
}

/* if screen width is larger than 600 */
@media screen and (min-width: 600px) {
  #layout {
    height: 98dvh;
    display: flex;
    flex-direction: column;
    align-content: stretch;
  }

  #control_panel {
    border: 1px solid red;
  }
  :root {
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}

/* if screen width is larger than 780 */
@media screen and (min-width: 780px) {
  :root {
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}
/* if screen width is larger than 1510 */
@media screen and (min-width: 1510px) {
  :root {
    --control-panel-button-width: 16.5%;
    --control-panel-width: 770px;
  }
}

/* if screen height is under 500 height */
@media screen and (max-height: 500px) {
  :root {
    --control-panel-button-height: 50px;
    --control-panel-width: 390px;
  }
}

c-ontrol-panel {
  min-width: var(--control-panel-width);
  width: var(--control-panel-width);
  background-color: peru;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}
c-ontrol-panel-button {
  height: var(--control-panel-button-height);
  width: var(--control-panel-button-width);
  min-height: var(--control-panel-button-height);
  min-width: var(--control-panel-button-width);
  position: relative;
  border: 12px solid;
  border-image-source: url(images/yellow_button_blank.png);
  border-image-slice: 15 fill;
}

.control_panel_button {
  height: 100%;
  width: 100%;
  cursor: pointer;
  display: block;
  position: relative;
}

.control_panel_button_text {
  font-size: 12px;
  color: white;
  text-shadow: #000 0px 0px 2px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#progress {
  flex-grow: 1;
  flex-shrink: 0;
  background-color: aquamarine;
}

.button_unstyled {
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
  outline: none;
  text-decoration: none;
}

c-ontent {
  --content-window-height: 55%;
  --content-window-border-image: none;
  --content-window-visibility: 1;
  position: absolute;
  margin-inline: 5%;
  width: 90%;
  top: 0.5rem;
  height: var(--content-window-height);
  background-color: transparent;
  z-index: 20;
  padding: 15px 20px;
  overflow-x: clip;
  border-image-width: 15px 15px 35px 15px;
  border-image-source: var(--content-window-border-image);
  border-image-slice: 15 15 45 15 fill;
  border-image-repeat: stretch;
  opacity: var(--content-window-visibility);

  transition: height 1s, opacity 0.5s;
  p {
    margin-block-start: 0;
    margin-block-end: 1rem;
  }

  .blue_button {
    border: 12px solid;
    border-image-source: url(images/blue_button_blank.png);
    border-image-slice: 15 fill;
  }
  .button_text {
    font-size: 12px;
    color: white;
    text-shadow: #000 0px 0px 2px;
  }
  .close_button {
    position: absolute;
    right: 16px;
    top: 12px;
    height: 16px;
    width: 16px;
    background-image: url(images/close_button_on_off.png);
  }
  .close_button:hover,
  .close_button:active {
    background-position-x: 16px;
  }

  .work_content_container {
    display: flex;
    flex-direction: column;
    height: 88%;
  }

  .work_selector {
    width: 100%;
  }

  #card_list {
    margin-top: 4px;
    overflow-x: clip;
    overflow-y: auto;
    .card_wrapper {
      border: 2px solid darkslategray;
      background-color: white;
      border-radius: 5px;
      margin: 8px 8px 0 0;
      .card_description {
        display: none;
      }
      input {
        font-size: 12px;
        outline: 2px solid deeppink;
      }
      input:hover {
        font-size: 14px;
        outline: 4px solid deeppink;
      }

      input:checked {
        font-size: 10px;
        outline: 6px solid green;
      }
      input:checked ~ .card {
        border: 6px solid blue;
      }
    }
    img {
      width: 100%;
    }
  }
}
