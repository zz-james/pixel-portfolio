:root {
  --tile-size: 32;
  --tilemap-cols: 17;
  --tilemap-rows: 21;
  --stage-cols: 20;
  --stage-rows: 12;
  --background-width: calc(var(--tile-size) * var(--tilemap-cols));
  --background-height: calc(var(--tile-size) * var(--tilemap-rows));
  --screen-tile-width: 32; /* it probably wont be this js overwrites this as it can't be done in CSS variables without becoming a px value which you can't use as divisor */
  --screen-tile-height: 32;
}

t-ile-app {
  display: block;
  position: relative;
  background-image: url(images/background.png);
  background-repeat: repeat-x;
  background-size: calc(var(--background-width) * 1px) 100%;
  /* width: 98vw; */
  height: calc(calc(var(--tile-size) * var(--stage-rows)) * 1px);
}

t-ile-layer {
  position: absolute;
  /* border: 1px solid red; */
  display: grid;
  gap: 0;
  grid-template-rows: repeat(var(--stage-rows), 1fr);
  grid-template-columns: repeat(var(--stage-cols), 1fr);
  /* width: calc(calc(var(--tile-size) * var(--stage-cols)) * 1px); */
  width: 100%;
  height: 100%;
}
t-ile {
  display: inline-block;
  grid-row: span 1;
  grid-column: span 1;
  background-image: url(images/tileset.png);

  /* scale up the background because it needs to scale with the page */
  --background-x-size: calc(calc(100% * var(--tilemap-cols)));
  --background-y-size: calc(calc(100% * var(--tilemap-rows)));
  background-size: var(--background-x-size) var(--background-y-size); /* these are % values */

  /* calcs -- background width needs to be adjusted because we want 100% to be the start of the last tile not the end nb. integer not px*/
  --background-width-adjusted-for-percent-offset: calc(
    var(--background-width) - var(--screen-tile-width)
  );

  --background-height-adjusted-for-percent-offset: calc(
    var(--background-height) - var(--screen-tile-width)
  );

  /* this is the x coordinate we start taking from the background image, in integer terms not px as it's not the rendered value */
  --x-tile-offset: calc(var(--x) * var(--tile-size));
  --y-tile-offset: calc(var(--y) * var(--tile-size));

  /* here we calculate the percentage offset in the integer values and use that in the background position prop  which will give us real px values */
  --x-background-offset: calc(
    calc(
        var(--x-tile-offset) /
          var(--background-width-adjusted-for-percent-offset)
      ) * 100%
  );

  --y-background-offset: calc(
    calc(
        var(--y-tile-offset) /
          var(--background-height-adjusted-for-percent-offset)
      ) * 100%
  );

  background-position: var(--x-background-offset) var(--y-background-offset);
}

body {
  margin: 0;
}

#layout {
  height: 93dvh;
  max-height: 93dvh;
  display: flex;
  flex-direction: column;
  align-content: stretch;
}

#game {
  overflow: hidden;
  background-color: black;
  flex-grow: 1;
}
#navigation {
  background-color: yellowgreen;
  flex-shrink: 0;

  display: flex;
}

/* mobile portrait */
#control_panel {
  --control-panel-button-width: 64px;
  --control-panel-button-height: 64px;
  --control-panel-width: 192px;
}

/* if screen width is larger than 600 */
@media screen and (min-width: 600px) {
  #layout {
    height: 98svh;
    display: flex;
    flex-direction: column;
    align-content: stretch;
  }

  #control_panel {
    border: 1px solid red;
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}

/* if screen width is larger than 780 */
@media screen and (min-width: 780px) {
  #control_panel {
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}
/* if screen width is larger than 1510 */
@media screen and (min-width: 1510px) {
  #control_panel {
    --control-panel-button-width: 16.5%;
    --control-panel-width: 770px;
  }
}

/* if screen height is under 500 height */
@media screen and (max-height: 500px) {
  #control_panel {
    --control-panel-button-height: 50px;
    --control-panel-width: 390px;
  }
}

#control_panel {
  min-width: var(--control-panel-width);
  width: var(--control-panel-width);
  background-color: peru;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}
.control_panel_button {
  height: var(--control-panel-button-height);
  width: var(--control-panel-button-width);
  min-height: var(--control-panel-button-height);
  min-width: var(--control-panel-button-width);
}
#progress {
  flex-grow: 1;
  flex-shrink: 0;
  background-color: aquamarine;
}

.button_unstyled {
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
  outline: none;
}
