:root {
  --tile-size: 32;
  --tilemap-cols: 17;
  --tilemap-rows: 21;
  --stage-cols: 20;
  --stage-rows: 12;
  --background-width: calc(var(--tile-size) * var(--tilemap-cols));
  --background-height: calc(var(--tile-size) * var(--tilemap-rows));
  --screen-tile-width: 32; /* it probably wont be this js overwrites this as it can't be done in CSS variables without becoming a px value which you can't use as divisor */
  --screen-tile-height: 32;
  --player-top: 0;
  --player-left: 0;
  --player-sprite: url(images/ghost.png);
  --content-delay: 0s;
  --content-window-visibility: 0;
  --dialog-visibility: 0;
  --content-window-height: 0;
  --content-window-border-image: url(images/bubble.png);
  --game-overflow: hidden; /* or sometimes   overflow: scroll; */
  --content-width: calc(var(--player-left) - 20);
}

* {
  font-family: "Lato", ".SFNSText", "SFProText-Regular", "SFUIText-Regular",
    ".SFUIText", Helvetica, Arial, sans-serif;
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  color: rgb(40, 40, 40);
}

p {
  margin-block-start: 0;
  margin-block-end: 1rem;
}

#loading {
  display: grid;
  height: 100vh;
  width: 100dvw;
  background-color: #16a2e2;
  place-items: center;

  div {
    display: block;
    font-size: xx-large;
  }
}

@media screen and (min-width: 600px) {
  #loading {
    width: auto;
  }
}

t-ile-app {
  display: block;
  position: relative;
  margin: auto;
  background-image: url(images/background.png);
  background-repeat: repeat-x;
  height: calc(calc(var(--tile-size) * var(--stage-rows)) * 1px);
  width: calc(calc(var(--tile-size) * var(--stage-cols)) * 1px);
  box-shadow: 0 7px 30px -10px rgba(0, 0, 0, 1);
}

t-ile-app:has(#loading) {
  box-shadow: none;
}

t-ile-layer {
  position: absolute;
  /* border: 1px solid red; */
  display: grid;
  gap: 0;
  grid-template-rows: repeat(var(--stage-rows), 1fr);
  grid-template-columns: repeat(var(--stage-cols), 1fr);
  width: calc(calc(var(--tile-size) * var(--stage-cols)) * 1px);
  /* width: 100%; */
  height: 100%;
}
t-ile {
  display: inline-block;
  grid-row: span 1;
  grid-column: span 1;
  background-image: url(images/tileset.png);

  /* scale up the background because it needs to scale with the page */
  --background-x-size: calc(calc(100% * var(--tilemap-cols)));
  --background-y-size: calc(calc(100% * var(--tilemap-rows)));
  background-size: var(--background-x-size) var(--background-y-size); /* these are % values */

  /* calcs -- background width needs to be adjusted because we want 100% to be the start of the last tile not the end nb. integer not px*/
  --background-width-adjusted-for-percent-offset: calc(
    var(--background-width) - var(--screen-tile-width)
  );

  --background-height-adjusted-for-percent-offset: calc(
    var(--background-height) - var(--screen-tile-width)
  );

  /* this is the x coordinate we start taking from the background image, in integer terms not px as it's not the rendered value */
  --x-tile-offset: calc(var(--x) * var(--tile-size));
  --y-tile-offset: calc(var(--y) * var(--tile-size));

  /* here we calculate the percentage offset in the integer values and use that in the background position prop  which will give us real px values */
  --x-background-offset: calc(
    calc(
        var(--x-tile-offset) /
          var(--background-width-adjusted-for-percent-offset)
      ) * 100%
  );

  --y-background-offset: calc(
    calc(
        var(--y-tile-offset) /
          var(--background-height-adjusted-for-percent-offset)
      ) * 100%
  );

  background-position: var(--x-background-offset) var(--y-background-offset);
}

body {
  margin: 0;
  background-color: #0f0e1f;
}

#layout {
  position: relative;
  height: 96dvh;
  max-height: 96dvh;
  display: flex;
  flex-direction: column;
  align-content: stretch;

  background-color: #16a2e2;
}

#game {
  overflow: var(--game-overflow);
  scrollbar-width: none;
  margin: 10px 0 2px 0;
  flex-grow: 1;
  scroll-behavior: smooth;
  border-radius: 4px;
}

@media screen and (max-width: 600px) {
  #game {
    margin: 0;
  }
}

@keyframes ghost {
  0% {
    background-position-x: 0;
  }
  99% {
    background-position-x: 100%;
  }
}

#player {
  z-index: 100; /* sigh */
  position: absolute;
  top: calc(var(--player-top) * 1px);
  left: calc(var(--player-left) * 1px);
  height: calc(var(--tile-size) * 1px);
  width: calc(var(--tile-size) * 1px);
  background-image: var(--player-sprite);
  transition: top 2s, left 2s;
  animation: ghost 1s steps(4) infinite;
  animation-fill-mode: both;
  label {
    display: block;
    width: 100%;
    height: 100%;
  }
}

/* ------------------------------- control panel ----------------------------------- */

#navigation {
  flex-shrink: 0;
  display: flex;
  width: 100dvw;
  margin: auto;
  border-image-source: url(images/panel.png);
  border-image-slice: 1 4 2 4 fill;
  margin-bottom: 1px;
  padding: 4px;
  max-width: calc(calc(var(--tile-size) * var(--stage-cols)) * 1px);
}

@media screen and (min-width: 600px) {
  #navigation {
    padding: 8px 12px 8px 12px;
  }
}

/* mobile portrait */
:root {
  --control-panel-button-width: 64px;
  --control-panel-button-height: 64px;
  --control-panel-width: 192px;
}

/* if screen width is larger than 600 */
@media screen and (min-width: 600px) {
  #layout {
    height: 98dvh;
    display: flex;
    flex-direction: column;
    align-content: stretch;
  }

  #control_panel {
    border: 1px solid red;
  }
  :root {
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}

/* if screen width is larger than 780 */
@media screen and (min-width: 780px) {
  :root {
    --control-panel-button-width: 33%;
    --control-panel-button-height: 128px;
    --control-panel-width: 390px;
  }
}
/* if screen width is larger than 1510 */
@media screen and (min-width: 1510px) {
  :root {
    --control-panel-button-width: 16.5%;
    --control-panel-width: 770px;
  }
}

/* if screen height is under 500 height */
@media screen and (max-height: 500px) {
  :root {
    --control-panel-button-height: 50px;
    --control-panel-width: 390px;
  }
}

c-ontrol-panel {
  min-width: var(--control-panel-width);
  width: var(--control-panel-width);

  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}
c-ontrol-panel-button {
  height: var(--control-panel-button-height);
  width: var(--control-panel-button-width);
  min-height: var(--control-panel-button-height);
  min-width: var(--control-panel-button-width);
  position: relative;
  border: 12px solid;
  border-image-source: url(images/yellow_button_blank.png);
  border-image-slice: 15 fill;
}

.control_panel_button {
  height: 100%;
  width: 100%;
  cursor: pointer;
  display: block;
  position: relative;
}

.control_panel_button_text {
  font-size: 12px;
  color: white;
  text-shadow: #000 0px 0px 8px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

p-rogress {
  flex-grow: 1;

  .hearts_progress {
    display: flex;
    flex-wrap: wrap;
    margin-top: 4px;
    gap: 4px;

    > div {
      font-size: 2.2vw;
      border-radius: 4px;
      background-color: rgba(255, 255, 255, 0.2);
      background-repeat: no-repeat;
      flex-grow: 1;
      margin: 0 2px;
      background-position: center bottom;
      text-align: center;
    }
    .inner_progress_panel {
      display: flex;
      flex-direction: column;
    }
  }
}

/* not so big on bigger screens */
@media screen and (min-width: 600px) {
  p-rogress > .hearts_progress > div {
    font-size: 1.5vw;
  }
}

.button_unstyled {
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
  outline: none;
  text-decoration: none;
}

.close_button {
  background-image: url(images/close_button_on_off.png);
}
.close_button:hover,
.close_button:active {
  background-position-x: 16px;
}

.blue_button {
  border: 12px solid;
  border-image-source: url(images/blue_button_blank.png);
  border-image-slice: 15 fill;
  cursor: pointer;
}

/* ---------------------------- dialogs ----------------- */

t-ile-app > input#bubble_content_switch {
  display: none;
}

t-ile-app > input#bubble_content_switch:checked {
  ~ #dialog {
    --content-window-height: 65dvh;
    --dialog-visibility: 1;
    visibility: visible;
    width: 15.5rem;
    height: auto;
    pointer-events: all;
    #bubble_content_switch_label {
      display: block;
    }
  }
}

#bubble_content_switch_label {
  display: none;
  height: 16px;
  width: 16px;
  margin-right: 0;
  margin-left: auto;
}

#bubble_content_switch_label > div {
  height: 16px;
  width: 16px;
}

t-ile-app > #dialog {
  --content-delay: 0s;
  position: absolute;
  left: calc(calc(var(--player-left) - 290) * 1px);
  pointer-events: none;
  top: calc(calc(var(--player-top) - 260) * 1px);
  width: 15.5rem;
  height: 0;
  margin-inline: 5%;
  height: var(--content-window-height);
  background-color: transparent;
  z-index: 20;
  padding: 15px 20px;
  border-width: 15px;
  border-image-width: 15px 15px 35px 15px;
  border-image-source: url(images/speech_bubble.png);
  border-image-slice: 15 15 45 15 fill;
  border-image-repeat: stretch;
  opacity: var(--dialog-visibility);
  visibility: none;
  transition: height 1s, opacity 1s;
  transition-delay: var(--content-delay);
  h4 {
    margin: 0;
    margin-block-end: 0.7em;
  }
  .dialog_button_container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    margin-top: -12px;
    margin-bottom: 20px;
    a {
      display: block;
      height: 10px;
      font-size: 10px;
      line-height: 0;
      transition: opacity 0.5s;
    }
    a:first-child {
      opacity: 0;
    }
    a:last-child {
      opacity: 1;
    }
  }
  .dialog:not([data-scroll="0"]) ~ .dialog_button_container > a:first-child {
    opacity: 1;
  }
  .dialog[data-scroll="end"] ~ .dialog_button_container > a:last-child {
    opacity: 0;
  }
}

/* ----------------------------- content ---------------------------------- */

c-ontent {
  > input#modal_content_switch:checked {
    ~ #content {
      pointer-events: all;
      --content-window-visibility: 1;
      --content-delay: 2s;
      height: 94dvh;
      #modal_content_switch_label {
        display: block;
      }
    }
  }
}

c-ontent {
  display: block;
  position: absolute;
  z-index: 100;
  left: 0;
  top: 0;
  height: 0;
  width: 100dvw;
  overflow-y: visible;
  margin: auto;
  input#modal_content_switch {
    display: none;
  }
}

c-ontent > #content {
  --content-delay: 0s;
  margin-inline: 5%;
  top: 1.25rem;
  left: 20px;
  width: 88vw;
  height: 0;
  background-color: transparent;
  z-index: 20;
  padding: 15px 20px;
  border-width: 15px;
  border-image-width: 15px 15px 35px 15px;
  border-image-source: url(images/bubble.png);
  border-image-slice: 15 15 45 15 fill;
  border-image-repeat: stretch;
  opacity: var(--content-window-visibility);
  transition: height 1s, opacity 1s;
  transition-delay: var(--content-delay);
  pointer-events: none;

  #modal_content_switch_label {
    display: none;
    margin-left: auto;
    margin-right: 0;
    height: 16px;
    width: 16px;
  }
  #modal_content_switch_label > div {
    height: 16px;
    width: 16px;
  }

  .button_text {
    font-size: 12px;
    color: white;
    text-shadow: #000 0px 0px 2px;
  }

  .work_content_container {
    display: flex;
    flex-direction: column;
    height: 86%;
    overflow-y: hidden;
  }

  .work_selector {
    width: 100%;
  }

  #card_list {
    margin-top: 4px;
    overflow-x: clip;
    overflow-y: scroll;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 30%));
    grid-gap: 1rem;
    .card_wrapper {
      input {
        display: none;
        touch-action: manipulation;
      }

      .card {
        height: 100%;
        position: relative;
        isolation: isolate;
        padding: 4px 8px 4px 8px;
        border: 1px solid lightgrey;
        background-color: white;
        border-radius: 5px;
        box-shadow: 0 7px 30px -10px rgba(150, 170, 180, 0.5);
        margin: 8px 8px 0 0;
        .card_switch_click_target {
          position: absolute;

          left: 0;
          top: 0;
          right: 0;
          bottom: 0;
        }
        img {
          margin-top: 2px;
          border: 1px solid #ddd;
        }
        .card_description {
          display: none;
        }
        .card_skills {
          display: none;
        }
        .card_dates {
          font-size: 10px;
        }
        .card_title {
          display: block;
          max-width: calc(100% - 10px);
          line-height: 1.5em;
          padding: 2px 4px;
        }
        .card_link {
          overflow-x: clip;
        }
      }
      input:checked ~ .card {
        position: absolute;
        z-index: 21;
        top: 0;
        left: 0;
        width: 100%;
        height: 99dvh;
        margin: 0;
        .card_description {
          display: block;
        }
        .card_skills {
          display: flex;
          flex-wrap: wrap;
          list-style-type: none;
          padding: 0;
          margin: 0;
          li {
            background-color: blue;
            border-radius: 5px;
            font-size: 12px;
            padding: 2px 4px;
            margin: 2px 4px;
            a {
              color: white;
              text-decoration: none;
            }
          }
        }
        .card_switch_click_target {
          margin-left: calc(100% - 20px);
          height: 16px;
          width: 16px;
          background-image: url(images/close_button_on_off.png);
        }
      }
      .card:hover {
        border-color: yellow;
      }
    }
    img {
      width: 100%;
    }
  }
}

.mandatory-scroll-snapping {
  display: flex;
  margin: 0.5rem auto;
  flex: none;
  overflow-x: auto;
  flex-flow: row nowrap;
  overflow-y: hidden;
  overflow-x: hidden;
  scroll-snap-type: x mandatory;
  scrollbar-width: thin;
  scroll-behavior: smooth;

  div {
    flex: none;
    width: 100%;

    padding-bottom: 8px;
    scroll-snap-stop: normal;
  }
}
